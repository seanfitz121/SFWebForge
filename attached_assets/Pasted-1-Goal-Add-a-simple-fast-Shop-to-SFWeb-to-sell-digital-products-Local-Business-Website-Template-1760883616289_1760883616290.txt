1) Goal

Add a simple, fast Shop to SFWeb to sell digital products:

Local Business Website Template (downloadable .zip)

Website Launch eBook (PDF)

SEO Checklist (PDF)

Use Stripe for payments. After successful payment, the buyer should immediately get:

A success page with a “Download” button.

A receipt email with secure download links (expire after 24–48h).

2) Navigation & Pages

Add Shop to the main header nav (between Pricing and About) and footer links.

Routes:

/shop — product grid (3 cards)

/shop/[slug] — product detail (hero image, description, bullets, price, CTA)

/checkout/success — thank you + download buttons

/checkout/cancel — payment cancelled, link back to product

/legal/download-terms — short terms about personal license, no resale

3) Product Catalog (data-driven)

Use a simple data source (JSON/TS module) to define products (no CMS needed for v1). Example:

[
  {
    "id": "site-template",
    "name": "Local Business Website Template",
    "type": "download",
    "priceEUR": 50,
    "short": "3-page starter template (Home, Services, Contact).",
    "bullets": [
      "Easy rebrand (colors, fonts, images)",
      "SEO-ready structure",
      "Contact form integration guide"
    ],
    "includes": [
      "Source code .zip",
      "Setup guide PDF",
      "Single-site personal/commercial license"
    ],
    "image": "/images/shop/site-template-cover.jpg",
    "fileKey": "site-template-v1.zip", 
    "stripePriceId": "price_XXXXXXXX_site_template"
  },
  {
    "id": "launch-ebook",
    "name": "Website Launch eBook",
    "type": "download",
    "priceEUR": 25,
    "short": "Step-by-step checklist to launch a site the right way.",
    "bullets": [
      "Domains, DNS, SSL, redirects",
      "Analytics & Search Console",
      "Legal basics & performance tuning"
    ],
    "includes": ["PDF (40+ pages)"],
    "image": "/images/shop/launch-ebook-cover.jpg",
    "fileKey": "site-launch-ebook-v1.pdf",
    "stripePriceId": "price_XXXXXXXX_launch_ebook"
  },
  {
    "id": "seo-checklist",
    "name": "SEO Checklist",
    "type": "download",
    "priceEUR": 15,
    "short": "Practical on-page and local SEO checklist.",
    "bullets": [
      "Titles & meta descriptions",
      "Schema (LocalBusiness, FAQ)",
      "Sitemap, robots, image alts"
    ],
    "includes": ["PDF (12 pages)"],
    "image": "/images/shop/seo-checklist-cover.jpg",
    "fileKey": "seo-checklist-v1.pdf",
    "stripePriceId": "price_XXXXXXXX_seo_checklist"
  }
]


Note: fileKey maps to a secure file asset stored server-side (not publicly crawlable). For v1, store in a private directory or object storage; downloads must be served via a signed, expiring link (see §6).

4) UI/UX Requirements
/shop (grid)

3 product cards: image, name, short copy, price, “View details” button.

Above the grid: short intro (“Digital products by SFWeb”) and trust badges (Stripe logo, “Instant download”, “Secure checkout”).

Sort accessibility + mobile responsive (1 column mobile, 3 on desktop).

/shop/[slug] (product detail)

Hero: cover image, name, price, bullet list, “Buy now” (primary), “Back to shop” (link).

“What’s included” section with list.

“How it works” steps:

Pay securely with Stripe

Instant download on success page

Email with download link

FAQ accordion (license, refunds, support).

SEO: unique title/meta (see §9).

Buttons & states

Primary CTA: “Buy now — €XX”

Disabled/spinner state on click until Stripe session redirects.

Error toast if checkout session creation fails.

5) Stripe Integration
Configuration

Environment variables:

STRIPE_SECRET_KEY=sk_live_xxx

STRIPE_WEBHOOK_SECRET=whsec_xxx

SITE_URL=https://sfweb.ie (or your preview domain)

DOWNLOAD_TOKEN_SECRET=long_random_string (for signed links)

RESEND_API_KEY=your_resend_key (for email delivery)

DOWNLOAD_LINK_TTL_HOURS=48 (configurable)

Stripe dashboard:

Create Products and Prices (EUR) for the 3 items; paste stripePriceId into the catalog data.

Checkout flow

Client clicks “Buy now” → call /api/checkout/create-session with { productId }.

Server validates product exists, creates a Stripe Checkout Session:

mode: "payment"

line_items: [{ price: stripePriceId, quantity: 1 }]

success_url: ${SITE_URL}/checkout/success?session_id={CHECKOUT_SESSION_ID}

cancel_url: ${SITE_URL}/checkout/cancel?product=${productId}

metadata: { productId } (and any audit fields)

Server returns the session.url; client window.location = url.

Webhook (fulfilment)

Add /api/stripe/webhook:

Verify signature with STRIPE_WEBHOOK_SECRET.

On checkout.session.completed:

Read productId from session.metadata.

Generate a signed download token (HMAC using DOWNLOAD_TOKEN_SECRET) including { productId, email, exp }.

Create 1–3 unique download URLs (if multiple files).

Send buyer an email (Resend) with download links + brief instructions + invoice note.

(Optional) Log order JSON to a flat file or lightweight DB for support.

6) Secure Downloads
Download Links

Route: /download/[token]

Server verifies:

Token signature valid

Not expired

Token matches requested productId

If valid → stream the file (fileKey) as an attachment.

If invalid/expired → show friendly error page + “Resend link” CTA that emails a fresh token (rate-limit this).

No direct file URLs. All downloads must pass through the signed-token endpoint.